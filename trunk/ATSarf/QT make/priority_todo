done --forest of prefixes,suffixes
done --stack of resulting nodes which is a class with functions
partially done--library with settings
done --every accept state should be reported once and user can query for all features (raw_data, description, abstract_categories,..) or on_match is called done(2) --on every accept state on each feature and user can command to skip on every feature or all (skip ALL POS, ALL RawData) using return value of on_match()
done --one-hot encoding
done --smart node {node*, pos, index}
done---find equality between chains of narrators and start building graph
done---ranking using BFS
done---recheck the meaning of needle and offset and u in commented out optimized part of narrator merging function
done---allow for greater values than 1 if they exist (don't chop)
done---re-write the graph without iterators but with our version of list
done---correct graph builder to keep track of needle or u per chain (not needed)
done---check how does dot result in ranks with an order (i.e. not just set which are in this rank and which in another only but also that this rank must come first and this after
done---refine structures to report run-on words

-change the code to instantiate the stemmer(prefixMachine,StemMachine,...) only once in hadith case-study (i.e. change the testcase to make the one stemmer with a clear() function)
-break cycles (save the equality vector)
	1) select the graph node to break [the graph node with the greatest size()]
	2) cluster based on average and stdev
	OR
	decrease delta and re-compute
-make SARF database-independent (priority:2)
-give more weight to order inforced by ibn
-all names with space add without a space, if has non-connecting letters before the space
-fix Makefile to accomodate ui
-check parsing problem in hadith number 4670
-when treating edges as one, pass again thru the vector of chain nodes (in GraphVisitorController)
-add code to draw cycle in a seperate file whenever detected
-correct tagging for IBN not to add words that follow (resulting from not ending nameConnector Structure except after detecting another structure)

-To Think of: add color to node to denote visited. and color to edges and linear sweep of all nodes and edges (by getting thru the chains)
-maybe: after merge, traverse the graph and re-check for equality the children of same node but with lesser threshold and in these cases make use of the order set by "ibn"
